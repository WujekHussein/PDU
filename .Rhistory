x <- read.csv("Posts.csv.gz")
x
head(x)
View(x)
remove(x)
Posts <- read.csv("Posts.csv.gz")
Comments <- read.csv("Comments.csv.gz")
Users <- read.csv("Users.csv.gz")
SQLDF1 <- sqldf("SELECT Location, SUM(UpVotes) as TotalUpVotes
FROM Users
WHERE Location != ''
GROUP BY Location
ORDER BY TotalUpVotes DESC
LIMIT 10")
library(sqldf)
SQLDF1 <- sqldf("SELECT Location, SUM(UpVotes) as TotalUpVotes
FROM Users
WHERE Location != ''
GROUP BY Location
ORDER BY TotalUpVotes DESC
LIMIT 10")
View(SQLDF1)
usesrsh <- Users[users$Location != '', ]
usesrsh <- Users[Users$Location != '', ]
View(usesrsh)
total_upvotes <- aggregate(Upvotes ~ Location, data=usesrsh, FUN=sum)
total_upvotes <- aggregate(UpVotes ~ Location, data=usesrsh, FUN=sum)
View(total_upvotes)
x <- order(-total_upvotes$UpVotes)
remove(x)
total_upvotes <- total_upvotes[order(-total_upvotes$UpVotes), ]
total_upvotes[1:10,]
remove(usesrsh)
BASE1=base_1(Users)
base_1 <- function(Users){
Users_without_empty_location <- Users[Users$Location!='',]                                          #wybieramy wiersze z niepustą lokalizacją
upvotes_by_location <- aggregate(UpVotes ~ Location, data= Users_without_empty_location, FUN=sum)   # grupujemy po lokalizacji i zliczamy upvote'y
upvotes_by_location_sorted_desc <- upvotes_by_location[order(-upvotes_by_location$UpVotes),]        # sortujemy malejąco po upvotach
names(upvotes_by_location_sorted_desc) <- c('Location', 'TotalUpVotes')                             # zmieniamy nazwę kolumny na porządaną
upvotes_by_location_top10 <- upvotes_by_location_sorted_desc[1:10,]                                 # wybieramy pierwsze 10 wierszy z posortowanej już ramki
}
BASE1=base_1(Users)
View(BASE1)
package(dplyr)
library(dplyr)
dplyr_1 <- function(Users){
Users %>%
filter(Location!='')%>%                    # wybieramy wiersze z niepustą lokalizacją
group_by(Location)%>%                      # grupujemy po lokalizacji
summarise(TotalUpVotes=sum(UpVotes))%>%    # zliczamy upvote'y i nazywamy kolumnę odpowiednio
arrange(-TotalUpVotes)%>%                  # sortujemy malejąco po upvotach
slice(1:10) -> wyn                         # wybieramy pierwsze 10 wierszy z posortowanej już ramki
}
DPLYR1 <- dplyr_1(Users)
View(Posts)
View(DPLYR1)
library(data.table)
table_1 <- function(Users){
wyn <- as.data.table(Users)[Location!='', .(TotalUpVotes=sum(UpVotes)), by=Location][order(-TotalUpVotes)][1:10] #wszystko w jednej linii, bo mogę
}
TABLE1 <- table_1(Users)
View(TABLE1)
library('sqldf')
SQLDF5 <- sqldf("--- 5)
SELECT Title, CommentCount, ViewCount, CommentsTotalScore, DisplayName, Reputation, Location
FROM (
SELECT Posts.OwnerUserId, Posts.Title, Posts.CommentCount, Posts.ViewCount,
CmtTotScr.CommentsTotalScore
FROM (
SELECT PostId, SUM(Score) AS CommentsTotalScore
FROM Comments
GROUP BY PostId
) AS CmtTotScr
JOIN Posts ON Posts.Id = CmtTotScr.PostId
WHERE Posts.PostTypeId=1
) AS PostsBestComments
JOIN Users ON PostsBestComments.OwnerUserId = Users.Id
ORDER BY CommentsTotalScore DESC
LIMIT 10")
View(SQLDF5)
